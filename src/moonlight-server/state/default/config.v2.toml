# The name that will be displayed in Moonlight
hostname = "Wolf"
# Set to false if this host doesn't support HEVC
support_hevc = true
# The version of this config file
config_version = 2


# A list of paired clients that will be allowed to stream
paired_clients = []


[[apps]]
title = "Firefox"
start_virtual_compositor = true

[apps.runner]
type = "docker"
name = "WolfFirefox"
image = "ghcr.io/games-on-whales/firefox:edge"
mounts = []
env = [
  "MOZ_ENABLE_WAYLAND=1",
  "GOW_REQUIRED_DEVICES=/dev/uinput /dev/input/event* /dev/dri/* /dev/nvidia*",
]
devices = [
]
ports = []
base_create_json = """
{
  "HostConfig": {
    "IpcMode": "host",
    "Privileged": false
  }
}
\
"""

[[apps]]
title = "RetroArch"
start_virtual_compositor = true

[apps.runner]
type = "docker"
name = "WolfRetroarch"
image = "ghcr.io/games-on-whales/retroarch:edge"
mounts = [
  "/run/udev:/run/udev:ro"
]
env = [
  "RUN_GAMESCOPE=true",
  "GOW_REQUIRED_DEVICES=/dev/uinput /dev/input/event* /dev/dri/* /dev/nvidia*",
]
devices = [
]
ports = []
base_create_json = """
{
  "HostConfig": {
    "IpcMode": "host",
    "CapAdd": ["SYS_ADMIN", "SYS_NICE"],
    "Privileged": false
  }
}
\
"""

[[apps]]
title = "Steam"
start_virtual_compositor = true

[apps.runner]
type = "docker"
name = "WolfSteam"
image = "ghcr.io/games-on-whales/steam:edge"
mounts = [
  "/run/udev:/run/udev:ro"
]
env = [
  "PROTON_LOG=1",
  "RUN_GAMESCOPE=true",
  "GOW_REQUIRED_DEVICES=/dev/uinput /dev/input/event* /dev/dri/* /dev/nvidia*",
]
devices = [
]
ports = []
base_create_json = """
{
  "HostConfig": {
    "IpcMode": "host",
    "CapAdd": ["SYS_ADMIN", "SYS_NICE"],
    "Privileged": false
  }
}
\
"""

[[apps]]
title = "EmulationStation DE"
start_virtual_compositor = true

[apps.runner]
type = "docker"
name = "WolfES-DE"
image = "ghcr.io/games-on-whales/es-de:edge"
mounts = [
  "/run/udev:/run/udev:ro"
]
env = [
  "RUN_GAMESCOPE=true",
  "GOW_REQUIRED_DEVICES=/dev/uinput /dev/input/event* /dev/dri/* /dev/nvidia*",
]
devices = [
]
ports = []
base_create_json = """
{
  "HostConfig": {
    "IpcMode": "host",
    "CapAdd": ["SYS_ADMIN", "SYS_NICE"],
    "Privileged": false
  }
}
\
"""

[[apps]]
title = "Test ball"
start_virtual_compositor = false

[apps.runner]
type = "process"
run_cmd = "sh -c \"while :; do echo 'running...'; sleep 10; done\""

[apps.video]
source = """
videotestsrc pattern=ball flip=true is-live=true !
video/x-raw, framerate={fps}/1
\
"""

[apps.audio]
source = "audiotestsrc wave=ticks is-live=true"


[gstreamer]

[gstreamer.video]

default_source = "appsrc name=wolf_wayland_source is-live=true block=false format=3 stream-type=0"
default_sink = """
rtpmoonlightpay_video name=moonlight_pay
payload_size={payload_size} fec_percentage={fec_percentage} min_required_fec_packets={min_required_fec_packets} !
udpsink host={client_ip} port={client_port} sync=true
\
"""

######################
# HEVC encoders
# Order here matters: Wolf will try them in order and pick the first one that's not failing
###
[[gstreamer.video.hevc_encoders]]
plugin_name = "nvcodec" # Nvidia
check_elements = ["nvh265enc", "cudaconvertscale", "cudaupload"]
video_params = """
queue ! cudaupload ! cudaconvertscale !
video/x-raw(memory:CUDAMemory), width={width}, height={height},
chroma-site={color_range}, format=NV12, colorimetry={color_space}, pixel-aspect-ratio=1/1
\
"""
encoder_pipeline = """
nvh265enc preset=low-latency-hq zerolatency=true gop-size=-1 rc-mode=cbr-ld-hq bitrate={bitrate} aud=false !
h265parse !
video/x-h265, profile=main, stream-format=byte-stream
\
"""

[[gstreamer.video.hevc_encoders]]
plugin_name = "qsv" # Intel QuickSync
check_elements = ["qsvh265enc", "vapostproc"]
video_params = """
queue !
vapostproc !
video/x-raw(memory:VAMemory), chroma-site={color_range}, width={width},
height={height}, format=NV12, colorimetry={color_space}
\
"""
encoder_pipeline = """
qsvh265enc low-latency=true b-frames=0 gop-size=0 idr-interval=1 ref-frames=1 bitrate={bitrate} !
h265parse !
video/x-h265, profile=main, stream-format=byte-stream
\
"""

[[gstreamer.video.hevc_encoders]]
plugin_name = "vaapi" # VAAPI: Intel/AMD
check_elements = ["vah265enc", "vapostproc"]
video_params = """
queue !
vapostproc !
video/x-raw(memory:VAMemory), chroma-site={color_range}, width={width},
height={height}, format=NV12, colorimetry={color_space}
\
"""
encoder_pipeline = """
vah265enc aud=false b-frames=0 ref-frames=1 num-slices=0 bitrate={bitrate} !
h265parse !
video/x-h265, profile=main, stream-format=byte-stream
\
"""

[[gstreamer.video.hevc_encoders]]
plugin_name = "applemedia" # OSX HW encoder
video_params = """
videoscale !
videoconvert !
videorate !
video/x-raw, width={width}, height={height}, framerate={fps}/1, format=I420,
chroma-site={color_range}, colorimetry={color_space}
\
"""
check_elements = ["vtenc_h265_hw"]
encoder_pipeline = """
vtenc_h265_hw allow-frame-reordering=false bitrate={bitrate} max-keyframe-interval=-1 realtime=true !
h265parse !
video/x-h265, profile=main, stream-format=byte-stream
\
"""

[[gstreamer.video.hevc_encoders]]
plugin_name = "x265" # SW Encoding
check_elements = ["x265enc"]
video_params = """
videoscale !
videoconvert !
videorate !
video/x-raw, width={width}, height={height}, framerate={fps}/1, format=I420,
chroma-site={color_range}, colorimetry={color_space}
\
"""
encoder_pipeline = """
x265enc tune=zerolatency speed-preset=superfast bitrate={bitrate}
option-string="info=0:keyint=-1:qp=28:repeat-headers=1:slices={slices_per_frame}:aud=0:annexb=1:log-level=3:open-gop=0:bframes=0:intra-refresh=0" !
video/x-h265, profile=main, stream-format=byte-stream
\
"""


######################
# H264 encoders
# Order here matters: Wolf will try them in order and pick the first one that's not failing
###
[[gstreamer.video.h264_encoders]]
plugin_name = "nvcodec" # Nvidia
check_elements = ["nvh264enc", "cudaconvertscale", "cudaupload"]
video_params = """
queue ! cudaupload ! cudaconvertscale !
video/x-raw(memory:CUDAMemory), width={width}, height={height},
chroma-site={color_range}, format=NV12, colorimetry={color_space}, pixel-aspect-ratio=1/1
\
"""
encoder_pipeline = """
nvh264enc preset=low-latency-hq zerolatency=true gop-size=0 rc-mode=cbr-ld-hq bitrate={bitrate} aud=false !
h264parse !
video/x-h264, profile=main, stream-format=byte-stream
\
"""

[[gstreamer.video.h264_encoders]]
plugin_name = "qsv" # Intel QuickSync
check_elements = ["qsvh264enc", "vapostproc"]
video_params = """
queue !
vapostproc !
video/x-raw(memory:VAMemory), chroma-site={color_range}, width={width},
height={height}, format=NV12, colorimetry={color_space}
\
"""
encoder_pipeline = """
qsvh264enc low-latency=true b-frames=0 gop-size=0 idr-interval=0 ref-frames=1 bitrate={bitrate} !
h264parse !
video/x-h264, profile=main, stream-format=byte-stream
\
"""

[[gstreamer.video.h264_encoders]]
plugin_name = "vaapi" # VAAPI: Intel/AMD
check_elements = ["vah264enc", "vapostproc"]
video_params = """
queue !
vapostproc !
video/x-raw(memory:VAMemory), chroma-site={color_range}, width={width},
height={height}, format=NV12, colorimetry={color_space}
\
"""
encoder_pipeline = """
vah264enc aud=false b-frames=0 ref-frames=1 num-slices=0 bitrate={bitrate} !
h264parse !
video/x-h264, profile=main, stream-format=byte-stream
\
"""

[[gstreamer.video.h264_encoders]]
plugin_name = "applemedia" # OSX HW encoder
video_params = """
videoscale !
videoconvert !
videorate !
video/x-raw, width={width}, height={height}, framerate={fps}/1, format=I420,
chroma-site={color_range}, colorimetry={color_space}
\
"""
check_elements = ["vtenc_h264_hw"]
encoder_pipeline = """
vtenc_h264_hw allow-frame-reordering=false bitrate={bitrate} max-keyframe-interval=-1 realtime=true !
h264parse !
video/x-h264, profile=main, stream-format=byte-stream
\
"""

[[gstreamer.video.h264_encoders]]
plugin_name = "x264" # SW Encoding
check_elements = ["x264enc"]
video_params = """
videoscale !
videoconvert !
videorate !
video/x-raw, width={width}, height={height}, framerate={fps}/1, format=I420,
chroma-site={color_range}, colorimetry={color_space}
\
"""
encoder_pipeline = """
x264enc pass=qual tune=zerolatency speed-preset=superfast b-adapt=false bframes=0 ref=1
sliced-threads=true threads={slices_per_frame} option-string="slices={slices_per_frame}:keyint=infinite:open-gop=0"
b-adapt=false bitrate={bitrate} aud=false !
video/x-h264, profile=high, stream-format=byte-stream
\
"""

##############
# AV1 encoders
###
[[gstreamer.video.av1_encoders]]
plugin_name = "aom"
check_elements = ["av1enc"]
video_params = """
videoscale !
videoconvert !
videorate !
video/x-raw, width={width}, height={height}, framerate={fps}/1, format=I420,
chroma-site={color_range}, colorimetry={color_space}
\
"""
encoder_pipeline = """
av1enc usage-profile=realtime end-usage=vbr target-bitrate={bitrate} !
av1parse !
video/x-av1, stream-format=obu-stream, alignment=frame, profile=main
\
"""

###########
# Audio
###
[gstreamer.audio]
default_source = """
pulsesrc device="{sink_name}" server="{server_name}"
\
"""

default_audio_params = "audio/x-raw, channels={channels}"

default_opus_encoder = """
opusenc bitrate={bitrate} bitrate-type=cbr frame-size={packet_duration} bandwidth=fullband audio-type=generic
max-payload-size=1400
\
"""

default_sink = """
rtpmoonlightpay_audio name=moonlight_pay packet_duration={packet_duration} encrypt={encrypt}
aes_key="{aes_key}" aes_iv="{aes_iv}"  !
udpsink host={client_ip} port={client_port} sync=true
\
"""

